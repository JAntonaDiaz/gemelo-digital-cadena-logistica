[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\janto\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\janto\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 13.0.2)
[debug]       Load.loadUnit: plugins took 200.5931ms
[debug]       Load.loadUnit: defsScala took 0.4124ms
[debug] [Loading] Scanning directory C:\Users\janto\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\janto\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 29.8227 ms
[debug]           Load.resolveProject(global-plugins) took 79.0012ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\janto\.sbt\1.0\plugins, plugins: List(<none>))) took 152.2311ms
[debug] [Loading] Done in C:\Users\janto\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 213.0889ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4349ms
[debug]     Load.loadUnit(file:/C:/Users/janto/.sbt/1.0/plugins/, ...) took 438.1915ms
[debug]   Load.apply: load took 755.8418ms
[debug]   Load.apply: resolveProjects took 11.5967ms
[debug]   Load.apply: finalTransforms took 163.8603ms
[debug]   Load.apply: config.delegates took 25.9776ms
[debug]   Load.apply: Def.make(settings)... took 1029.5271ms
[debug]   Load.apply: structureIndex took 324.8446ms
[debug]   Load.apply: mkStreams took 6.8805ms
[info] loading global plugins from C:\Users\janto\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5742.2969ms
[debug]           Load.loadUnit: plugins took 128.0383ms
[debug]           Load.loadUnit: defsScala took 0.0117ms
[debug] [Loading] Scanning directory C:\Users\janto\IdeaProjects\tfg-logistica-transporte\project
[debug]             Load.loadUnit: mkEval took 23.5851ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\janto\IdeaProjects\tfg-logistica-transporte\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.1421 ms
[info] loading settings for project tfg-logistica-transporte-build from idea.sbt ...
[debug]               Load.resolveProject(tfg-logistica-transporte-build) took 13.2693ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tfg-logistica-transporte-build, base: C:\Users\janto\IdeaProjects\tfg-logistica-transporte\project, plugins: List(<none>))) took 18.3655ms
[debug] [Loading] Done in C:\Users\janto\IdeaProjects\tfg-logistica-transporte\project, returning: (tfg-logistica-transporte-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5673.6262ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.4ms
[debug]         Load.loadUnit(file:/C:/Users/janto/IdeaProjects/tfg-logistica-transporte/project/, ...) took 5814.1732ms
[debug]       Load.apply: load took 5817.854ms
[debug]       Load.apply: resolveProjects took 0.2891ms
[debug]       Load.apply: finalTransforms took 14.11ms
[debug]       Load.apply: config.delegates took 0.5327ms
[debug]       Load.apply: Def.make(settings)... took 272.5015ms
[debug]       Load.apply: structureIndex took 91.5685ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from C:\Users\janto\IdeaProjects\tfg-logistica-transporte\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 10383.2547ms
[debug]     Load.loadUnit: defsScala took 0.0045ms
[debug] [Loading] Scanning directory C:\Users\janto\IdeaProjects\tfg-logistica-transporte
[debug]       Load.loadUnit: mkEval took 0.4944ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\janto\IdeaProjects\tfg-logistica-transporte, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 7.0086 ms
[info] loading settings for project tfg-logistica-transporte from build.sbt ...
[debug]         Load.resolveProject(tfg-logistica-transporte) took 57.4787ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tfg-logistica-transporte, base: C:\Users\janto\IdeaProjects\tfg-logistica-transporte, plugins: List(<none>))) took 66.6693ms
[debug] [Loading] Done in C:\Users\janto\IdeaProjects\tfg-logistica-transporte, returning: (tfg-logistica-transporte)
[debug]     Load.loadUnit: loadedProjectsRaw took 3510.7178ms
[debug]     Load.loadUnit: cleanEvalClasses took 56.5326ms
[debug]   Load.loadUnit(file:/C:/Users/janto/IdeaProjects/tfg-logistica-transporte/, ...) took 13993.2832ms
[debug] Load.apply: load took 13996.3493ms
[debug] Load.apply: resolveProjects took 0.1687ms
[debug] Load.apply: finalTransforms took 65.4953ms
[debug] Load.apply: config.delegates took 0.4976ms
[debug] Load.apply: Def.make(settings)... took 128.0042ms
[debug] Load.apply: structureIndex took 60.0718ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to tfg-logistica-transporte (in build file:/C:/Users/janto/IdeaProjects/tfg-logistica-transporte/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56379 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56379, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to tfg-logistica-transporte (in build file:/C:/Users/janto/IdeaProjects/tfg-logistica-transporte/)
[debug] > Exec(idea-shell, None, None)
